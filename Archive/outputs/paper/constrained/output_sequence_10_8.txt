Running solver...
Choice set:¬(dom2) ∧ ¬(dom1) ((8,10])
Choice set:dom2 ([1,8])
----------
Solving 8 vars:
	universe ([1,10])
	universe ([1,10])
	¬(dom2) ∧ ¬(dom1) ((8,10])
	dom2 ([1,8])
	universe ([1,10])
	universe ([1,10])
	universe ([1,10])
	universe ([1,10])
Choice constraints:
	Position 3: ¬(dom2) ∧ ¬(dom1) ((8,10])
	Position 4: dom2 ([1,8])
Count constraints:
	Nr. dom2 ([1,8]) == 7
	Nr. dom1 ∧ ¬(dom2) (()) < 2
	Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
----------
Counting non-exchangeable...
Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 2: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 3: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
						¬(dom2) ((8,10])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						Expanding bounds [3,6]...
							Subproblem:
							----------
							Solving 6 vars:
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6 already satisfied
								Splitting on other constraints...
								... no other constraints
								Counting sequences:
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
								¬(dom2) ((8,10])
									Domain product: 64
								Counting domains: 64
							=========
							tot:64
					=========
					tot:64
			=========
			tot:64
	=========
	tot:64
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 7
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 7
			Nr. dom2 ([1,8]) == 7 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 6: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 7: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 8: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 9: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 10: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	Solving combination 11: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	Solving combination 12: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 6
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 6
			Nr. dom2 ([1,8]) == 6 is unsat here
		==========
		Unsat: 0
	Solving combination 13: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 6
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 6
			Nr. dom2 ([1,8]) == 6 is unsat here
		==========
		Unsat: 0
	Solving combination 14: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 7
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 7
			Nr. dom2 ([1,8]) == 7 is unsat here
		==========
		Unsat: 0
	Solving combination 15: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 7
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 7
			Nr. dom2 ([1,8]) == 7 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 4: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 5: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 6: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 7: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 0
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 0
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 8: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 9: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			==========
			=========
			tot:0
	=========
	tot:0
Solving combination 10: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			==========
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 11: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1
							Expanding bounds [2,5]...
								Subproblem:
								----------
								Solving 5 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
										Domain product: 32
									Counting domains: 32
								=========
								tot:32
						=========
						tot:32
				=========
				tot:32
			==========
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,1]...
						=========
						tot:0
				=========
				tot:0
			=========
			tot:256
	=========
	tot:1536
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 6
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 6
			Nr. dom2 ([1,8]) == 6 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 6: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 7: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 8: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 9: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 10: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	Solving combination 11: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	Solving combination 12: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 6
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 6
			Nr. dom2 ([1,8]) == 6 is unsat here
		==========
		Unsat: 0
	Solving combination 13: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 6
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 6
			Nr. dom2 ([1,8]) == 6 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 12: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 13: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 14: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 15: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 1
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
								Domain product: 8
							Counting domains: 8
						=========
						tot:8
				=========
				tot:8
			Rest class: 
				Subproblem:
				----------
				Solving 5 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,1]...
						=========
						tot:0
				=========
				tot:0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 6: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 7: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 16: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 17: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 18: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
							dom2 ([1,8])
								Domain product: 64
							Counting domains: 64
						=========
						tot:64
				=========
				tot:64
			Rest class: 
				Subproblem:
				----------
				Solving 4 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			==========
			=========
			tot:0
	=========
	tot:0
Solving combination 19: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
							dom2 ([1,8])
								Domain product: 64
							Counting domains: 64
						=========
						tot:64
				=========
				tot:64
			Rest class: 
				Subproblem:
				----------
				Solving 4 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0
							Expanding bounds [1,4]...
								Subproblem:
								----------
								Solving 4 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 4 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 4 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 4 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
										Domain product: 16
									Counting domains: 16
								=========
								tot:16
						=========
						tot:16
				=========
				tot:16
			==========
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,2]...
						=========
						tot:0
				=========
				tot:0
			=========
			tot:1024
	=========
	tot:15360
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 6: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 7: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 8: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 9: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 10: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	Solving combination 11: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 5
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 5
			Nr. dom2 ([1,8]) == 5 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 20: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 21: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 22: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
							dom2 ([1,8])
								Domain product: 64
							Counting domains: 64
						=========
						tot:64
				=========
				tot:64
			Rest class: 
				Subproblem:
				----------
				Solving 4 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 23: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 2
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 already satisfied
							Splitting on other constraints...
							... no other constraints
							Counting sequences:
							dom2 ([1,8])
							dom2 ([1,8])
								Domain product: 64
							Counting domains: 64
						=========
						tot:64
				=========
				tot:64
			Rest class: 
				Subproblem:
				----------
				Solving 4 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,2]...
						=========
						tot:0
				=========
				tot:0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 6: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 7: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 2 vars:
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 24: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 25: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 26: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 27: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,3]...
								Subproblem:
								----------
								Solving 3 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 512
									Counting domains: 512
								=========
								tot:512
						=========
						tot:512
				=========
				tot:512
			Rest class: 
				Subproblem:
				----------
				Solving 3 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,3]...
								Subproblem:
								----------
								Solving 3 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 3 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 3 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 3 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
										Domain product: 8
									Counting domains: 8
								=========
								tot:8
						=========
						tot:8
				=========
				tot:8
			==========
			=========
			tot:4096
	=========
	tot:81920
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 6: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 7: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 8: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	Solving combination 9: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 4
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 4
			Nr. dom2 ([1,8]) == 4 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 28: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 29: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 30: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 31: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 3
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 3 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,3]...
								Subproblem:
								----------
								Solving 3 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 512
									Counting domains: 512
								=========
								tot:512
						=========
						tot:512
				=========
				tot:512
			Rest class: 
				Subproblem:
				----------
				Solving 3 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 6: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 7: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 3 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 32: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 33: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 34: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 35: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,4]...
								Subproblem:
								----------
								Solving 4 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 4 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 4096
									Counting domains: 4096
								=========
								tot:4096
						=========
						tot:4096
				=========
				tot:4096
			Rest class: 
				Subproblem:
				----------
				Solving 2 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 2 vars:
							¬(dom2) ((8,10])
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,2]...
								Subproblem:
								----------
								Solving 2 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 2 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 2 vars:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ((8,10])
									¬(dom2) ((8,10])
										Domain product: 4
									Counting domains: 4
								=========
								tot:4
						=========
						tot:4
				=========
				tot:4
			==========
			=========
			tot:16384
	=========
	tot:245760
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 3
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 6: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	Solving combination 7: ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 3
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 3
			Nr. dom2 ([1,8]) == 3 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 36: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 37: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 38: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 39: ['Nr. dom2 ([1,8]) == 4', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 3', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 4
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 4
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 4 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,4]...
								Subproblem:
								----------
								Solving 4 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 4 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 4096
									Counting domains: 4096
								=========
								tot:4096
						=========
						tot:4096
				=========
				tot:4096
			Rest class: 
				Subproblem:
				----------
				Solving 2 vars:
					¬(dom2) ((8,10])
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 6: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 7: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 4 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 40: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 41: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 42: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			=========
			tot:0
	=========
	tot:0
Solving combination 43: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,5]...
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 32768
									Counting domains: 32768
								=========
								tot:32768
						=========
						tot:32768
				=========
				tot:32768
			Rest class: 
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
			==========
			=========
			tot:65536
	=========
	tot:393216
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 2
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 4: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	Solving combination 5: ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 2
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 2
			Nr. dom2 ([1,8]) == 2 is unsat here
		==========
		Unsat: 0
	=========
	tot:0
==========
Solving combination 44: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 45: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 46: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 47: ['Nr. dom2 ([1,8]) == 5', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 2', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 5
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 5
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				¬(dom2) ((8,10])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting non-exchangeable...
			Solving combination 0: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 1: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 2: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
							Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
						==========
						Unsat: 0
				=========
				tot:0
			Solving combination 3: ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 5 vars:
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
							Expanding bounds [3,5]...
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 5 vars:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
									dom2 ([1,8])
										Domain product: 32768
									Counting domains: 32768
								=========
								tot:32768
						=========
						tot:32768
				=========
				tot:32768
			Rest class: 
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			==========
			Solving combination 4: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 5: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 6: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			Solving combination 7: ['Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
			Split class :
				Subproblem:
				----------
				Solving 5 vars:
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 48: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 49: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 50: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
						Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2 is unsat here
					==========
					Unsat: 0
			=========
			tot:0
	=========
	tot:0
Solving combination 51: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
				Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
				Splitting on other constraints...
					Subproblem:
					----------
					Solving 6 vars:
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
						dom2 ([1,8])
					Choice constraints:
					Count constraints:
						Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
					----------
					Counting exchangeable...
					Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
						Expanding bounds [3,6]...
							Subproblem:
							----------
							Solving 6 vars:
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 3 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 4 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 5 is unsat here
							==========
							Unsat: 0
							Subproblem:
							----------
							Solving 6 vars:
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
							Choice constraints:
							Count constraints:
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6
							----------
							Counting exchangeable...
							Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6
								Nr. dom2 ∨ ¬(dom1) ([1,10]) == 6 already satisfied
								Splitting on other constraints...
								... no other constraints
								Counting sequences:
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
								dom2 ([1,8])
									Domain product: 262144
								Counting domains: 262144
							=========
							tot:262144
					=========
					tot:262144
			=========
			tot:262144
	=========
	tot:262144
Rest class: 
	Subproblem:
	----------
	Solving 2 vars:
		¬(dom2) ∧ ¬(dom1) ((8,10])
		dom2 ([1,8])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 1
		Nr. dom1 ∧ ¬(dom2) (()) < 2
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
	----------
	Counting non-exchangeable...
	Solving combination 0: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
					Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
					Splitting on other constraints...
						Subproblem:
						----------
						Solving 1 vars:
							¬(dom2) ∧ ¬(dom1) ((8,10])
						Choice constraints:
						Count constraints:
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
							Expanding bounds [0,1]...
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
								==========
								Unsat: 0
								Subproblem:
								----------
								Solving 1 vars:
									¬(dom2) ∧ ¬(dom1) ((8,10])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
									Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
									Splitting on other constraints...
									... no other constraints
									Counting sequences:
									¬(dom2) ∧ ¬(dom1) ((8,10])
										Domain product: 2
									Counting domains: 2
								=========
								tot:2
						=========
						tot:2
				=========
				tot:2
		=========
		tot:2
	Rest class: 
		Subproblem:
		----------
		Solving 1 vars:
			dom2 ([1,8])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) < 2
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					dom2 ([1,8])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) < 2
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) < 2
					Expanding bounds [0,1]...
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom1 ∧ ¬(dom2) (()) == 0
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom1 ∧ ¬(dom2) (()) == 0
							Nr. dom1 ∧ ¬(dom2) (()) == 0 already satisfied
							Splitting on other constraints...
								Subproblem:
								----------
								Solving 1 vars:
									dom2 ([1,8])
								Choice constraints:
								Count constraints:
									Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
								----------
								Counting exchangeable...
								Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
									Expanding bounds [0,1]...
										Subproblem:
										----------
										Solving 1 vars:
											dom2 ([1,8])
										Choice constraints:
										Count constraints:
											Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
										----------
										Counting exchangeable...
										Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
											Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0 is unsat here
										==========
										Unsat: 0
										Subproblem:
										----------
										Solving 1 vars:
											dom2 ([1,8])
										Choice constraints:
										Count constraints:
											Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
										----------
										Counting exchangeable...
										Propagating Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
											Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1 already satisfied
											Splitting on other constraints...
											... no other constraints
											Counting sequences:
											dom2 ([1,8])
												Domain product: 8
											Counting domains: 8
										=========
										tot:8
								=========
								tot:8
						=========
						tot:8
						Subproblem:
						----------
						Solving 1 vars:
							dom2 ([1,8])
						Choice constraints:
						Count constraints:
							Nr. dom1 ∧ ¬(dom2) (()) == 1
							Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
						----------
						Counting exchangeable...
						Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
							Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
						==========
						Unsat: 0
				=========
				tot:8
		=========
		tot:8
	==========
	Solving combination 1: ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 0
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 0
			Nr. dom2 ([1,8]) == 0 already satisfied
			Splitting on other constraints...
				Subproblem:
				----------
				Solving 1 vars:
					¬(dom2) ∧ ¬(dom1) ((8,10])
				Choice constraints:
				Count constraints:
					Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
				----------
				Counting exchangeable...
				Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
					Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
				==========
				Unsat: 0
		=========
		tot:0
	Solving combination 2: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 0
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	Solving combination 3: ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
	Split class :
		Subproblem:
		----------
		Solving 1 vars:
			¬(dom2) ∧ ¬(dom1) ((8,10])
		Choice constraints:
		Count constraints:
			Nr. dom2 ([1,8]) == 1
			Nr. dom1 ∧ ¬(dom2) (()) == 1
			Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1
		----------
		Counting exchangeable...
		Propagating Nr. dom2 ([1,8]) == 1
			Nr. dom2 ([1,8]) == 1 is unsat here
		==========
		Unsat: 0
	=========
	tot:16
==========
Solving combination 52: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 53: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 54: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 55: ['Nr. dom2 ([1,8]) == 6', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 1', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 6
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 6
		6 exchangeable free vars: universe ([1,10])
		Splitting on other constraints...
			Subproblem:
			----------
			Solving 6 vars:
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
				dom2 ([1,8])
			Choice constraints:
			Count constraints:
				Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
			----------
			Counting exchangeable...
			Propagating Nr. dom1 ∧ ¬(dom2) (()) == 1
				Nr. dom1 ∧ ¬(dom2) (()) == 1 is unsat here
			==========
			Unsat: 0
	=========
	tot:0
Solving combination 56: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 57: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 58: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 59: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 0', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 2', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 0
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 60: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 0
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 61: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 1
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 62: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 0']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) == 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
Solving combination 63: ['Nr. dom2 ([1,8]) == 7', 'Nr. dom1 ∧ ¬(dom2) (()) == 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2'] // ['Nr. dom2 ([1,8]) == 0', 'Nr. dom1 ∧ ¬(dom2) (()) < 1', 'Nr. dom2 ∨ ¬(dom1) ([1,10]) > -1']
Split class :
	Subproblem:
	----------
	Solving 6 vars:
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
		universe ([1,10])
	Choice constraints:
	Count constraints:
		Nr. dom2 ([1,8]) == 7
		Nr. dom1 ∧ ¬(dom2) (()) == 1
		Nr. dom2 ∨ ¬(dom1) ([1,10]) > 2
	----------
	Counting exchangeable...
	Propagating Nr. dom2 ([1,8]) == 7
		6 exchangeable free vars: universe ([1,10])
	==========
	Unsat: 0
=========
tot:4194304
